% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mpi.R
\name{abc_smc_cluster}
\alias{abc_smc_cluster}
\title{Approximate Bayesian Computation with Sequential Monte Carlo Sampling on
High-Performance Computing Clusters}
\usage{
abc_smc_cluster(model, prior, nb_simul, summary_stat_target,
  prior_test = NULL, n_cluster = 1, verbose = FALSE,
  dist_weights = NULL, cl, ...)
}
\arguments{
\item{model}{a \code{R} function implementing the model to be simulated. It
 must take as arguments a vector of model parameter values and it
 must return a vector of summary statistics. When using the option
\code{use_seed=TRUE}, \code{model} must take as arguments a vector
containing a seed value and the model parameter values. A tutorial
is provided in the package's vignette to dynamically link a binary
code to a \code{R} function. Users may alternatively wish to wrap
their binary executables using the provided functions
\code{\link{binary_model}} and \code{\link{binary_model_cluster}}.
The use of these functions is associated with slightly different
constraints on the design of the binary code (see
\code{\link{binary_model}} and \code{\link{binary_model_cluster}}).}

\item{prior}{a list of prior information. Each element of the list
corresponds to a model parameter. The list element must be a vector
whose first argument determines the type of prior distribution:
possible values are \code{"unif"} for a uniform distribution on
a segment, \code{"normal"} for a normal distribution,
\code{"lognormal"} for a lognormal distribution or \code{"exponential"}
for an exponential distribution.}

\item{nb_simul}{a positive integer equal to the desired number of simulations
of the model below the tolerance threshold when \code{method} is
\code{"Beaumont"}, \code{"Drovandi"} and \code{"Delmoral"}.
When \code{method} is \code{"Lenormand"}, the number of simulations
below the tolerance threshold is equal to \code{nb_simul * alpha}.
See the package's vignette and Lenormand et al. (2012) for details.}

\item{summary_stat_target}{a vector containing the targeted (observed)
summary statistics.}

\item{prior_test}{a string expressing the constraints between model
parameters. This expression will be evaluated as a logical expression,
you can use all the logical operators including \code{"<"}, \code{">"},
\ldots{}. Each parameter should be designated with \code{"X1"}, \code{"X2"},
\ldots{} in the same order as in the prior definition. If not provided,
no constraint will be applied.}

\item{n_cluster}{a positive integer. If larger than 1 (the default value),
\code{ABC_sequential} will launch \code{model} simulations in parallel on
\code{n_cluster} cores of the computer.}

\item{verbose}{If \code{TRUE}, \code{ABC_sequential} writes in the current
directory intermediary results at the end of each step of the algorithm
various files.}

\item{dist_weights}{a vector containing the weights to apply to the distance
between the computed and the targeted statistics. These weights can
be used to give more importance to a summary statistisc for example.
The weights will be normalized before applying them. If not provided,
no weights will be applied.}

\item{cl}{cluster object, such as that produced by \code{snow::makeCluster}.}

\item{\dots}{Additional arguments can be passed depending on the choosen
method (see below).}
}
\value{
The returned value is a list containing the following components:
   \item{param}{The model parameters used in the \code{model} simulations.}
   \item{stats}{The summary statistics obtained at the end of the \code{model}
         simulations.}
   \item{weights}{The weights of the different \code{model} simulations.}
   \item{stats_normalization}{The standard deviation of the summary statistics
         across the \code{model} simulations of the initial step. These values
         are used to normalize the summary statistics before the computation
         of the Euclidean distance between simulations and data.}
    \item{epsilon}{The final maximal distance between simulations and data in
          the retained sample of particles.}
    \item{nsim}{The number of \code{model} simulations performed.}
    \item{computime}{The computing time to perform the simulations.}
    \item{intermediary}{Intermediary results stored when the option
          \code{"verbose=TRUE"} is chosen. Each element of this list
          corresponds to a different step. See the argument \code{verbose}
          above for more details on the information stored.}
}
\description{
This function implements the Lenormand algorithm for ABC-SMC designed from the
\code{EasyABC} R package on arbitrarily user-defined clusters.
}
